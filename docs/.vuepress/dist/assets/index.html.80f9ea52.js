import{r as e,o as t,c as o,a as n,d as l,F as r,g as s,i as a}from"./app.4f2594b6.js";import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";const i={},u=s(`<h1 id="typescript" tabindex="-1"><a class="header-anchor" href="#typescript" aria-hidden="true">#</a> TypeScript</h1><h2 id="\u8BB0\u5F55-\u{1F4DD}" tabindex="-1"><a class="header-anchor" href="#\u8BB0\u5F55-\u{1F4DD}" aria-hidden="true">#</a> \u8BB0\u5F55 \u{1F4DD}</h2><h2 id="\u57FA\u672C\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u7C7B\u578B" aria-hidden="true">#</a> \u57FA\u672C\u7C7B\u578B</h2><h3 id="\u6570\u7EC4\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u7C7B\u578B" aria-hidden="true">#</a> \u6570\u7EC4\u7C7B\u578B</h3><ol><li>\u666E\u901A\u7684\u6570\u7EC4\u7C7B\u578B</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> fibonacci<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>

<span class="token comment">// \u6570\u7EC4\u7684\u9879\u4E2D\u4E0D\u5141\u8BB8\u51FA\u73B0\u5176\u4ED6\u7684\u7C7B\u578B</span>
<span class="token comment">// \u4E0D\u80FD\u5C06\u7C7B\u578B\u201Cstring\u201D\u5206\u914D\u7ED9\u7C7B\u578B\u201Cnumber\u201D\u3002</span>
<span class="token keyword">let</span> fibonacciTo<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;5&#39;</span><span class="token punctuation">]</span>

<span class="token comment">// \u6570\u7EC4\u7684\u4E00\u4E9B\u65B9\u6CD5\u7684\u53C2\u6570\u4E5F\u4F1A\u6839\u636E\u6570\u7EC4\u5728\u5B9A\u4E49\u65F6\u7EA6\u5B9A\u7684\u7C7B\u578B\u8FDB\u884C\u9650\u5236</span>
<span class="token keyword">let</span> fibonacciNumber<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>

<span class="token comment">//\u7C7B\u578B\u201Cstring\u201D\u7684\u53C2\u6570\u4E0D\u80FD\u8D4B\u7ED9\u7C7B\u578B\u201Cnumber\u201D\u7684\u53C2\u6570\u3002</span>
fibonacciNumber<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;8&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// \u5982\u679C\u6570\u7EC4\u91CC\u9762\u9700\u8981\u4F7F\u7528\u591A\u4E2A\u503C \u53EF\u4EE5\u7528type\u542F\u7528\u4E00\u4E2A\u7C7B\u578B\u522B\u540D</span>
<span class="token keyword">type</span> <span class="token class-name">types</span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span>

<span class="token keyword">let</span> fi<span class="token operator">:</span> types<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;5&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><ol start="2"><li>\u6570\u7EC4\u8303\u578B</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> arrayGenerics<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;5&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="3"><li><p>\u7279\u6B8A\u7684\u8FD8\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u63A5\u53E3\u53BB\u8868\u793A\u4E00\u4E2A\u6570\u7EC4</p><blockquote><p>\u6570\u5B57\u7D22\u5F15\u662F string \u7D22\u5F15\u7684\u5B50\u96C6 <br></p></blockquote></li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">inter</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> fibo<span class="token operator">:</span> inter <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">3213213</span><span class="token punctuation">,</span> <span class="token number">321</span><span class="token punctuation">]</span>
fibo<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> fibo<span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>\u4E24\u79CD\u4EFB\u610F\u7C7B\u578B\u7B7E\u540D\u5E76\u5B58\u65F6\uFF0Cnumber \u7C7B\u578B\u7684\u7B7E\u540D\u6307\u5B9A\u7684\u503C\u7C7B\u578B\u5FC5\u987B\u662F string \u7C7B\u578B\u7684\u7B7E\u540D\u6307\u5B9A\u7684\u503C\u7C7B\u578B\u7684\u5B50\u96C6,\u7D22\u5F15\u7684\u7C7B\u578B\u4E3A\u6570\u5B57\u7684\u65F6\u5019 \u4ED6\u7684\u7D22\u5F15\u7C7B\u578B\u5C31\u5FC5\u987B\u662F number \u7C7B\u578B\u6216\u8005 string \u7C7B\u578B<br></p></blockquote><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">it</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4F1A\u62A5\u9519 \u201Cnumber\u201D\u7D22\u5F15\u7C7B\u578B\u201Cstring | number\u201D\u4E0D\u80FD\u5206\u914D\u7ED9\u201Cstring\u201D\u7D22\u5F15\u7C7B\u578B\u201Cobject\u201D\u3002</span>
  <span class="token punctuation">[</span>index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span>
  <span class="token punctuation">[</span>index<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> object
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u7C7B\u6570\u7EC4\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u6570\u7EC4\u7C7B\u578B" aria-hidden="true">#</a> \u7C7B\u6570\u7EC4\u7C7B\u578B</h3><p>\u7C7B\u6570\u7EC4\uFF08Array-like Object\uFF09\u4E0D\u662F\u6570\u7EC4\u7C7B\u578B\uFF0C\u6BD4\u5982 arguments,\u9664\u4E86\u6709\u6570\u7EC4\u7684\u7D22\u5F15\u7B7E\u540D\u4E4B\u5916 \u8FD8\u62E5\u6709\u5176\u4ED6\u7684\u5C5E\u6027 \u7C7B\u6570\u7EC4\u90FD\u6709\u81EA\u5DF1\u7684\u63A5\u53E3\u5B9A\u4E49\uFF0C\u5982 IArguments, NodeList, HTMLCollection \u7B49</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">likeObjArray</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">number</span>
  length<span class="token operator">:</span> <span class="token builtin">number</span>
  callee<span class="token operator">:</span> <span class="token builtin">Function</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token comment">// let arg : number[]= arguments; //  \u7C7B\u578B\u201CIArguments\u201D\u7F3A\u5C11\u7C7B\u578B\u201Cnumber[]\u201D\u7684\u4EE5\u4E0B\u5C5E\u6027: pop, push, concat, join \u53CA\u5176\u4ED6 27 \u9879\u3002</span>
  <span class="token keyword">let</span> arg<span class="token operator">:</span> likeObjArray <span class="token operator">=</span> arguments
  <span class="token comment">// \u6CE8\u610F\u4E0D\u8981\u5199\u6210</span>
  <span class="token comment">// let arg : Array&lt;likeObjArray&gt; = arguments // \u8FD9\u91CC\u8BF4\u660E\u4E86 arg\u662F\u4E00\u4E2A\u4E8C\u7EF4\u6570\u7EC4 \u91CC\u9762\u7684\u6BCF\u4E00\u9879 \u90FD\u662FlikeObjArray\u7684\u7C7B\u6570\u7EC4</span>
  <span class="token keyword">let</span> args<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>likeObjArray<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>IArguments \u662F Typescript \u5DF2\u7ECF\u5B9A\u4E49\u597D\u4E86\u7684\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">IArguments</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span>
  length<span class="token operator">:</span> <span class="token builtin">number</span>
  callee<span class="token operator">:</span> <span class="token builtin">Function</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570" aria-hidden="true">#</a> \u51FD\u6570</h2><h2 id="\u63A5\u53E3-interface" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3-interface" aria-hidden="true">#</a> \u63A5\u53E3 interface</h2><h3 id="\u63A5\u53E3\u58F0\u660E\u51FD\u6570\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3\u58F0\u660E\u51FD\u6570\u7C7B\u578B" aria-hidden="true">#</a> \u63A5\u53E3\u58F0\u660E\u51FD\u6570\u7C7B\u578B</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">func</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
  timer<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> func<span class="token operator">:</span> <span class="token function-variable function">func</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>func<span class="token punctuation">.</span>timer<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u7C7B" aria-hidden="true">#</a> \u7C7B</h2><h2 id="keyof-\u64CD\u4F5C\u7B26" tabindex="-1"><a class="header-anchor" href="#keyof-\u64CD\u4F5C\u7B26" aria-hidden="true">#</a> keyof \u64CD\u4F5C\u7B26</h2><blockquote><p>keyof \u4E0D\u4EC5\u83B7\u53D6\u7684\u662F\u5F53\u524D\u7C7B\u578B\u7684\u952E \u8FD8\u4F1A\u83B7\u53D6\u5F53\u524D\u5143\u7D20\u7684\u539F\u578B\u94FE\u4E0A\u7684\u952E</p></blockquote><ol><li>\u5BF9\u57FA\u672C\u7C7B\u578B\u4F7F\u7528\uFF1A</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// type numberKey = &quot;toString&quot; | &quot;toFixed&quot; | &quot;toExponential&quot; | &quot;toPrecision&quot; | &quot;valueOf&quot; | &quot;toLocaleString&quot;</span>
<span class="token keyword">type</span> <span class="token class-name">numberKey</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token builtin">number</span>

<span class="token comment">// type stringKey = number | typeof Symbol.iterator | &quot;toString&quot; | &quot;charAt&quot; | &quot;charCodeAt&quot; | &quot;concat&quot; | &quot;indexOf&quot; | &quot;lastIndexOf&quot; | &quot;localeCompare&quot; | &quot;match&quot; | &quot;replace&quot; | &quot;search&quot; | &quot;slice&quot; | ... 36 more ... | &quot;at&quot;</span>
<span class="token comment">// number | typeof Symbol.iterator \u662F\u56E0\u4E3A\u662F\u7531\u5B57\u7B26\u6570\u7EC4\u7EC4\u6210  \u6570\u7EC4\u7684\u7D22\u5F15\u7C7B\u578B\u5C31\u6709 number | typeof Symbol.iterator</span>
<span class="token keyword">type</span> <span class="token class-name">stringKey</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token builtin">string</span>

<span class="token comment">// type booleanKey = &quot;valueOf&quot;</span>
<span class="token keyword">type</span> <span class="token class-name">booleanKey</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token builtin">boolean</span>

<span class="token comment">// type symbolKey = typeof Symbol.toPrimitive | typeof Symbol.toStringTag | &quot;toString&quot; | &quot;valueOf&quot; | &quot;description&quot;</span>
<span class="token keyword">type</span> <span class="token class-name">symbolKey</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token builtin">symbol</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><blockquote><p>keyof string \u7684\u89E3\u91CA\uFF1A \u6D89\u53CA\u4E00\u4E9B\u6761\u4EF6\u5206\u53D1\u7684\u77E5\u8BC6: [k] extends [...] \u540E\u7EED\u6709\u8BF4</p></blockquote><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">K</span></span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token builtin">string</span>
<span class="token comment">// true</span>
<span class="token keyword">type</span> <span class="token class-name">isString</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token punctuation">[</span>
  <span class="token operator">|</span> <span class="token builtin">number</span>
  <span class="token operator">|</span> <span class="token keyword">typeof</span> Symbol<span class="token punctuation">.</span>iterator
  <span class="token operator">|</span> <span class="token string">&#39;length&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;constructor&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;anchor&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;big&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;blink&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;bold&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;charAt&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;charCodeAt&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;codePointAt&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;concat&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;endsWith&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;fontcolor&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;fontsize&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;fixed&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;includes&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;indexOf&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;italics&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;lastIndexOf&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;link&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;localeCompare&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;match&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;matchAll&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;normalize&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;padEnd&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;padStart&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;repeat&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;replace&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;replaceAll&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;search&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;slice&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;small&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;split&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;strike&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;sub&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;substr&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;substring&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;sup&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;startsWith&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;toString&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;trim&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;trimStart&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;trimLeft&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;trimEnd&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;trimRight&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;toLocaleLowerCase&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;toLocaleUpperCase&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;toLowerCase&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;toUpperCase&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;valueOf&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;at&#39;</span>
<span class="token punctuation">]</span>
  <span class="token operator">?</span> <span class="token boolean">true</span>
  <span class="token operator">:</span> <span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br></div></div><ol start="2"><li>\u5BF9\u6570\u7EC4\u4F7F\u7528</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">arrKey</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token comment">// true</span>
<span class="token keyword">type</span> <span class="token class-name">ans</span> <span class="token operator">=</span> <span class="token punctuation">[</span>arrKey<span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token punctuation">[</span><span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">symbol</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token keyword">const</span> array<span class="token operator">:</span> arrKey <span class="token operator">=</span> <span class="token number">110</span> <span class="token comment">// \u4F20\u5165string\u6216\u8005symbol\u62A5\u9519</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,30),k=a("\u5BF9\u4E8E keyof [] \u7684\u89E3\u91CA: "),b={href:"https://www.typescriptlang.org/play?#code/C4TwDgpgBAKlC8UDWEQHsBmUDaBdAUPqJFAM7ABOCyqmZlAlgHYDmhx0DpM40i2MXFAgAPYBCYATUjnxR5UJgFcAtgCMIVAD7yAyiHVoANgDoG4igENgabVABERiS2AALe1B32AxmibkKJW8bCg8vXyZva3s5BXC0MBAAdXNXZjCHDAYjIwz7LKkYhU9M5kkASSlRPKNLckrJUQB5DDywBLalUndY+S8KCAA3TVIIPO6GDGA8pX80qfGjBm8x3pL7Ultp9dIwJZW85m8jJUbSQ6qRFqK4hwArNHT1lBBz9YlGCDevQcsTr5ufUytgAopZvO51lkjBY8hhatsvPDrABZSxgPIqdGA97DCggexaDZoFRjIkDSRBVbFfoQSkrABKDBYrkR9hsABk0FEnLpGKwwuy0HyKMwWIT7NE1kiyhy6tMiQVJHL6pcYkIAPxQShKaAALigGD+o3wQA",target:"_blank",rel:"noopener noreferrer"},m=a("\u5728\u7EBF\u9884\u89C8"),d=s(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T</span></span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token keyword">type</span> <span class="token class-name">str</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token builtin">string</span>
<span class="token comment">// true \u9AD8\u7248\u672C\u7684ts \u5B58\u5728symbol</span>
<span class="token keyword">type</span> <span class="token class-name">isType</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token constant">T</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token punctuation">[</span>
  <span class="token operator">|</span> <span class="token builtin">number</span>
  <span class="token operator">|</span> Symbol<span class="token punctuation">.</span>iterator
  <span class="token operator">|</span> <span class="token string">&#39;length&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;constructor&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;concat&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;copyWithin&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;fill&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;find&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;findIndex&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;lastIndexOf&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;pop&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;push&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;reverse&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;shift&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;unshift&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;slice&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;sort&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;splice&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;includes&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;indexOf&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;join&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;keys&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;entries&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;values&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;forEach&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;filter&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;flat&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;flatMap&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;map&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;every&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;some&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;reduce&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;reduceRight&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;toLocaleString&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;toString&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;at&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;findLast&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;findLastIndex&#39;</span>
<span class="token punctuation">]</span>
  <span class="token operator">?</span> <span class="token boolean">true</span>
  <span class="token operator">:</span> <span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><ol><li><p>\u5BF9\u5BF9\u8C61\u4F7F\u7528</p><blockquote><p>JavaScript \u5BF9\u8C61\u7684\u5C5E\u6027\u540D\u4F1A\u88AB\u5F3A\u5236\u8F6C\u4E3A\u4E00\u4E2A\u5B57\u7B26\u4E32<br></p></blockquote></li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Arrayish</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>n<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">unknown</span> <span class="token punctuation">}</span>
<span class="token comment">// type A = number</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> <span class="token keyword">keyof</span> Arrayish
<span class="token keyword">type</span> <span class="token class-name">Mapish</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>k<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">}</span>
<span class="token comment">// type M = string | number</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">M</span></span> <span class="token operator">=</span> <span class="token keyword">keyof</span> Mapish
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>TypeScript \u652F\u6301 symbol \u7C7B\u578B\u7684\u5C5E\u6027\u540D \u56E0\u6B64</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">a</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token builtin">any</span> <span class="token comment">// number | string | symbol</span>
<span class="token comment">// \u5728\u8303\u578B\u4E2D\u4E5F\u662F T \u76F8\u5F53\u4E8E\u4E86any</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useKey</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>o<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> k<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="typeof-\u64CD\u4F5C\u7B26" tabindex="-1"><a class="header-anchor" href="#typeof-\u64CD\u4F5C\u7B26" aria-hidden="true">#</a> typeof \u64CD\u4F5C\u7B26</h2><p>TypeScript \u6DFB\u52A0\u7684 typeof \u65B9\u6CD5\u53EF\u4EE5\u5728\u7C7B\u578B\u4E0A\u4E0B\u6587\uFF08type context\uFF09\u4E2D\u4F7F\u7528\uFF0C\u7528\u4E8E\u83B7\u53D6\u4E00\u4E2A\u53D8\u91CF\u6216\u8005\u5C5E\u6027\u7684\u7C7B\u578B \u5E76\u4E14\u5BF9\u6807\u8BC6\u7B26\uFF08\u6BD4\u5982\u53D8\u91CF\u540D\uFF09\u6216\u8005\u4ED6\u4EEC\u7684\u5C5E\u6027\u4F7F\u7528 typeof \u624D\u662F\u5408\u6CD5\u7684</p><ol><li>\u5BF9\u5BF9\u8C61\u4F7F\u7528 typeof</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;tom&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">personT</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> person
<span class="token comment">/*
 * type personT = {
 *   name: string;
 *   1: string;
 * }
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ol start="2"><li>\u5BF9\u6570\u7EC4\u4F7F\u7528 typeof</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">]</span>

<span class="token comment">// type arrT = (string | number)[]</span>
<span class="token keyword">type</span> <span class="token class-name">arrT</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> arr

<span class="token comment">// type arrV = string | number</span>
<span class="token keyword">type</span> <span class="token class-name">arrV</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> arr<span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ol start="3"><li>\u5BF9\u51FD\u6570\u4F7F\u7528 typeof</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">identity</span><span class="token generic class-name"><span class="token operator">&lt;</span>Type<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> Type<span class="token punctuation">)</span><span class="token operator">:</span> Type <span class="token punctuation">{</span>
  <span class="token keyword">return</span> arg
<span class="token punctuation">}</span>
<span class="token comment">// type result = &lt;Type&gt;(arg: Type) =&gt; Type</span>
<span class="token keyword">type</span> <span class="token class-name">result</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> identity
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="4"><li>\u5BF9\u679A\u4E3E\u4F7F\u7528 typeof</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token keyword">enum</span> UserResponse <span class="token punctuation">{</span>
  No <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
  Yes <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// data { No: number, Yes: number }</span>
<span class="token keyword">type</span> <span class="token class-name">data</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> UserResponse
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B" aria-hidden="true">#</a> \u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B</h2><p>\u901A\u8FC7\u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B \u53EF\u4EE5\u67E5\u627E\u5230\u5176\u4ED6\u7C7B\u578B\u6216\u8005\u5143\u7D20\u4E0A\u7684\u7279\u5B9A\u7684\u5C5E\u6027</p><blockquote><p><code>[&#39;taobao&#39;, &#39;timal&#39;, &#39;alipay&#39;] as const</code> \u8868\u793A\u4E3A\u53EA\u8BFB\u6570\u7EC4 \u2019taobao&#39;, &#39;timal&#39;, &#39;alipay&#39; \u56E0\u4E3A\u53EA\u8BFB\u6570\u7EC4\u7684\u503C\u662F\u786E\u5B9A\u7684 \u624D\u80FD\u7528 typeof X[keyof typeof X] // \u83B7\u53D6</p></blockquote><p>\u7D22\u5F15\u7C7B\u578B\u64CD\u4F5C\u5BF9\u8C61:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Person</span> <span class="token operator">=</span> <span class="token punctuation">{</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> alive<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">}</span>
<span class="token comment">// type value = string | number | boolean</span>
<span class="token keyword">type</span> <span class="token class-name">value</span> <span class="token operator">=</span> Person<span class="token punctuation">[</span><span class="token keyword">keyof</span> Person<span class="token punctuation">]</span> <span class="token comment">// keyof \u83B7\u53D6key</span>
<span class="token comment">// age | name | alive</span>
<span class="token keyword">type</span> <span class="token class-name">key</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> Person
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u7D22\u5F15\u7C7B\u578B\u64CD\u4F5C\u6570\u7EC4:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;taobao&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;timal&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;alipay&#39;</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token keyword">const</span>
<span class="token keyword">type</span> <span class="token class-name">a</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> app<span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">]</span>
<span class="token comment">// a = taobao | timal | alipay</span>
<span class="token comment">// \u5982\u679C\u4F20\u5165string \u4F1A\u62A5\u9519</span>
<span class="token comment">// \u4F46\u662F\u4F1A\u8F6C\u6210string \u56E0\u6B64\u8FD9\u91CC\u7684a\u83B7\u53D6\u7684\u662Fapp\u7684\u7D22\u5F15\u7C7B\u578B\u4EE5\u53CA\u7C7B\u7684\u5168\u90E8\u5C5E\u6027</span>

<span class="token comment">//  number | typeof Symbol.iterator | &quot;toString&quot; | &quot;charAt&quot; |</span>
<span class="token comment">//  &quot;charCodeAt&quot; | &quot;concat&quot; | &quot;indexOf&quot; | &quot;lastIndexOf&quot; | &quot;localeCompare&quot; | &quot;match&quot; |</span>
<span class="token comment">//  &quot;replace&quot; | &quot;search&quot; | &quot;slice&quot; | ... 36 more ... | &quot;at&quot;</span>
<span class="token keyword">type</span> <span class="token class-name">key</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> a
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u7D22\u5F15\u64CD\u4F5C\u5143\u7EC4:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ap</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">]</span>
<span class="token comment">// \u53D6\u503C\u5171\u6709\u7684\u503C</span>
<span class="token comment">// type as = &quot;toString&quot; | &quot;valueOf&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token keyword">as</span></span> <span class="token operator">=</span> <span class="token keyword">keyof</span> ap<span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="\u6761\u4EF6\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u6761\u4EF6\u7C7B\u578B" aria-hidden="true">#</a> \u6761\u4EF6\u7C7B\u578B</h2><p>\u6761\u4EF6\u7C7B\u578B\u7684\u5199\u6CD5\u7C7B\u4F3C\u4E8E javascript \u4E2D\u7684\u4E09\u5143\u8868\u8FBE\u5F0F</p><blockquote><p>\u6CE8\u610F unknow \u5728\u6CA1\u6709\u7C7B\u578B\u6536\u7A84\u7684\u60C5\u51B5\u4E0B\u4E0D\u80FD\u8D4B\u503C\u7ED9\u5176\u4ED6\u7684\u7C7B\u578B</p></blockquote><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">MergeObj<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">unknown</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token constant">U</span> <span class="token keyword">extends</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">unknown</span><span class="token operator">&gt;&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">keyof</span> <span class="token constant">U</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span> <span class="token operator">?</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">U</span> <span class="token operator">?</span> <span class="token constant">U</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token builtin">never</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="\u5728\u6761\u4EF6\u7C7B\u578B\u4E2D\u8FDB\u884C\u7C7B\u578B\u63A8\u65AD" tabindex="-1"><a class="header-anchor" href="#\u5728\u6761\u4EF6\u7C7B\u578B\u4E2D\u8FDB\u884C\u7C7B\u578B\u63A8\u65AD" aria-hidden="true">#</a> \u5728\u6761\u4EF6\u7C7B\u578B\u4E2D\u8FDB\u884C\u7C7B\u578B\u63A8\u65AD</h3><p>\u4F7F\u7528<code>infer</code>\u5173\u952E\u5B57\u53EF\u4EE5\u5728\u6761\u4EF6\u7C7B\u578B\u4E2D\u63A8\u65AD\u7C7B\u578B \u7136\u540E\u5728\u540E\u7EED\u7684\u5224\u65AD\u4E2D\u5F15\u7528\u63A8\u65AD\u7684\u7ED3\u679C</p><blockquote><p>\u5229\u7528\u7C7B\u578B\u63A8\u65AD\u5B9E\u73B0 queryParameters \u7684\u63A8\u65AD</p></blockquote><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Merge<span class="token operator">&lt;</span>otherParam <span class="token keyword">extends</span> object<span class="token punctuation">,</span> Param <span class="token keyword">extends</span> object<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>key <span class="token keyword">in</span> <span class="token keyword">keyof</span> otherParam <span class="token operator">|</span> <span class="token keyword">keyof</span> Param<span class="token punctuation">]</span><span class="token operator">:</span> key <span class="token keyword">extends</span> <span class="token keyword">keyof</span> otherParam <span class="token operator">?</span> otherParam<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">:</span> key <span class="token keyword">extends</span> <span class="token keyword">keyof</span> Param <span class="token operator">?</span> Param<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token builtin">never</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">queryParameters<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token operator">?</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> ks<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> kv<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> r<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token operator">?</span> Merge<span class="token operator">&lt;</span><span class="token punctuation">{</span> <span class="token punctuation">[</span>k <span class="token keyword">in</span> ks<span class="token punctuation">]</span><span class="token operator">:</span> kv <span class="token punctuation">}</span><span class="token punctuation">,</span> queryParameters<span class="token operator">&lt;</span>r<span class="token operator">&gt;&gt;</span>
    <span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>k <span class="token keyword">in</span> key<span class="token punctuation">]</span><span class="token operator">:</span> value <span class="token punctuation">}</span>
  <span class="token operator">:</span> <span class="token builtin">never</span>
<span class="token keyword">type</span> <span class="token class-name">foo</span> <span class="token operator">=</span> queryParameters<span class="token operator">&lt;</span><span class="token string">&#39;age=1&amp;obj=2&amp;name=tom&#39;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="\u6761\u4EF6\u7C7B\u578B\u5206\u53D1" tabindex="-1"><a class="header-anchor" href="#\u6761\u4EF6\u7C7B\u578B\u5206\u53D1" aria-hidden="true">#</a> \u6761\u4EF6\u7C7B\u578B\u5206\u53D1</h3><p>\u5728\u8303\u578B\u4E2D\u4F7F\u7528\u6761\u4EF6\u7C7B\u578B\u7684\u65F6\u5019 \u5982\u679C\u4F20\u5165\u7684\u662F\u4E00\u4E2A\u8054\u5408\u7C7B\u578B\uFF0C\u4ED6\u5C31\u4F1A\u53D8\u6210\u5206\u53D1\u7684</p><blockquote><p>\u4F8B\u5982\u8FD9\u91CC\u5C06\u8054\u5408\u7C7B\u578B\u7684<code>string|number</code> \u5206\u53D1\u6210\u4E00\u4E2A<code>string[] | number[]</code> \u7684\u7C7B\u578B</p></blockquote><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">toArray<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">unknown</span></span> <span class="token operator">?</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token builtin">never</span>
<span class="token comment">// type union = string[] | number[]</span>
<span class="token keyword">type</span> <span class="token class-name">union</span> <span class="token operator">=</span> toArray<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token operator">&gt;</span>

<span class="token comment">// \u8FD9\u91CC\u7684\u6267\u884C\u8FC7\u7A0B\u662F</span>
<span class="token comment">// string | number extends unknown</span>
<span class="token comment">// \u5206\u522B\u6267\u884C\u4E86 string extends unknown ? string[] : never | number extends unknown ? number[] : never</span>
<span class="token comment">// string[] | number[]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u5982\u679C\u8981\u963B\u6B62\u8054\u5408\u6761\u4EF6\u7C7B\u578B\u8FDB\u884C\u6761\u4EF6\u5206\u53D1\u7684\u8BDD \u53EF\u4EE5\u4F7F\u7528\u65B9\u62EC\u53F7\u5C06\u8303\u578B\u5305\u88F9</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">toArray<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token constant">T</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">unknown</span></span> <span class="token operator">?</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token builtin">never</span>
<span class="token comment">// type union = (string | number)[]</span>
<span class="token keyword">type</span> <span class="token class-name">union</span> <span class="token operator">=</span> toArray<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u56E0\u4E3A <code>string | number extends unknown</code>\u7684\u503C\u662F\u4E3Atrue\u7684 \u6240\u4EE5\u8FD9\u91CC\u7684unknown\u6CA1\u6709\u7528\u65B9\u62EC\u53F7\u5305\u88F9<br> \u4F46\u662F\u5982\u679C\u6362\u4E00\u79CD\u65B9\u5F0F \u4F1A\u53D8\u6210never \u56E0\u4E3A <code>[T] extends string | [T] extends number</code> \u7684\u503C\u90FD\u662Fnever</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">toArray<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token constant">T</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">string</span></span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">?</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token builtin">any</span>
<span class="token comment">// type union = never</span>
<span class="token keyword">type</span> <span class="token class-name">union</span> <span class="token operator">=</span> toArray<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u6240\u4EE5 <b>\u5982\u679C\u8981\u963B\u6B62\u8054\u5408\u6761\u4EF6\u7C7B\u578B\u8FDB\u884C\u6761\u4EF6\u5206\u53D1 \u5C3D\u91CF\u5C06\u4E24\u4E2A\u90FD\u7528[] \u5305\u88F9</b></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">toArray<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token constant">T</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token punctuation">[</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token builtin">any</span>
<span class="token comment">// type union = (string | number)[]</span>
<span class="token keyword">type</span> <span class="token class-name">union</span> <span class="token operator">=</span> toArray<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="tsconfig-\u914D\u7F6E\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#tsconfig-\u914D\u7F6E\u6587\u4EF6" aria-hidden="true">#</a> tsconfig \u914D\u7F6E\u6587\u4EF6</h2><p><a href="./tsconfig.html">\u70B9\u51FB\u8DF3\u8F6C</a></p>`,44);function y(g,h){const p=e("ExternalLinkIcon");return t(),o(r,null,[u,n("blockquote",null,[n("p",null,[k,n("a",b,[m,l(p)])])]),d],64)}var v=c(i,[["render",y]]);export{v as default};
